name: Build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
   #   - name: Set up Node.js
   #     uses: actions/setup-node@v2
   #     with:
   #       node-version: 14
   #  - name: Install dependencies
   #   run: npm ci
   #   - name: Run Jest tests
   #     run: npm run test:coverage
   #  - name: SonarCloud Scan
   #     uses: sonarsource/sonarcloud-github-action@master
   #     env:
   #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
   #   - name: Notify Slack
   #     uses: rtCamp/action-slack-notify@v2
   #     env:
   #       SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
   #       SLACK_MESSAGE: 'Test results: ${{ job.status }}'     
              
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME}}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest
          
      - name: Install and setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mkdir -p ~/.local/bin
          mv ./kubectl ~/.local/bin/kubectl
          echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yaml
        env:
          KUBECONFIG: ./kubeconfig.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl get nodes 
          kubectl set image deployment/${{secrets.DEPLOYMENT_NAME}}  ${{ secrets.IMAGE_NAME }}=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.IMAGE_NAME }}
          kubectl rollout restart deployment/${{secrets.DEPLOYMENT_NAME}} 
        env:
          KUBECONFIG: ./kubeconfig.yaml
